########################################################################################################################
#  Any code, applications, scripts, templates, proofs of concept, documentation and other items provided by AWS under  #
#  this SOW are "AWS Content," as defined in the Agreement, and are provided for illustration purposes only. All such  #
#  AWS Content is provided solely at the option of AWS, and is subject to the terms of the Addendum and the Agreement. #
#  Customer is solely responsible for using, deploying, testing, and supporting any code and applications provided by  #
#  AWS under this SOW.                                                                                                 #
########################################################################################################################

AWSTemplateFormatVersion: '2010-09-09'
Description: Prepares the Management Account for adding custom solutions

Parameters:
  OrganizationId:
    Type: 'String'
    Description: AWS Organization Id of Control Tower
  ManagementAccountId:
    Type: 'String'
    Description: AWS Account ID of the Organization Management Account
  AuditAccountId:
    Type: 'String'
    Description: AWS Account ID of the Audit Account
  LogsArchiveAccountId:
    Type: 'String'
    Description: AWS Account ID of the Logs Archive Account
  NetworkAccountId:
    Type: 'String'
    Description: AWS Account ID of the Network Account
  NetworkToolsAccountId:
    Type: 'String'
    Description: AWS Account ID of the Network Tools Account
  SharedServicesAccountId:
    Type: 'String'
    Description: AWS Account ID of the Shared Services Account
  SecurityROAccountId:
    Type: 'String'
    Description: AWS Account ID of the Security Read Only Account
  SecurityServicesAccountId:
    Type: 'String'
    Description: AWS Account ID of the Security Services Account
  SecurityToolsAccountId:
    Type: 'String'
    Description: AWS Account ID of the Security Tools Account
  SecurityBreakGlassAccountId:
    Type: 'String'
    Description: AWS Account ID of the Security Break Glass Account
  Sandbox1AccountId:
    Type: 'String'
    Description: AWS Account ID of the Sandbox-1 Account
  InfrastructureOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Infrastructure Accounts
  SecurityOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Security Accounts
  SandboxOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Sandbox Accounts
  WorkspacesOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Workspaces Accounts
  WorkspacesAccountId:
    Type: 'String'
    Description: AWS Account ID of the Workspaces Account
  DevelopmentOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Development Accounts
  QAOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for QA Accounts
  StagingOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Staging Accounts
  ProductionOrganizationUnitId:
    Type: 'String'
    Description: AWS Organization unit Id for Production Accounts
  DevelopmentAccountId:
    Type: 'String'
    Description: AWS Account ID of the Development Account
  QAAccountId:
    Type: 'String'
    Description: AWS Account ID of the QA Account
  StagingAccountId:
    Type: 'String'
    Description: AWS Account ID of the Staging Account
  ProductionAccountId:
    Type: 'String'
    Description: AWS Account ID of the Production Account

  NameforSSMParameterforOrganizationId:
    Type: String
    Description: Name of the SSM Parameter under which the AWS Organization ID of the LZ will be stored
    Default: /org/core/OrganizationID
  NameforSSMParameterforLogsArchiveAccoundId:
    Type: String
    Description: Name of the SSM Parameter under which the AWS Logs Archive Account ID of the LZ will be stored
    Default: /org/core/LogsArchiveAccoundId
  NameforSSMParameterforAuditAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the AWS Audit Account ID of the LZ will be stored
    Default: /org/core/AuditAccountId
  NameforSSMParameterforSecurityOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Security OU will be stored
    Default: /org/core/SecurityOU
  NameforSSMParameterforInfrastructureOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Infrastructure OU will be stored
    Default: /org/core/InfrastructureOU
  NameforSSMParameterforSandboxOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Sandbox OU will be stored
    Default: /org/core/SandboxOU
  NameforSSMParameterforWorkspacesOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Workspaces OU will be stored
    Default: /org/core/WorkspacesOU
  NameforSSMParameterforManagementAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Management AWS account ID will be stored
    Default: /org/core/ManagementAccountId
  NameforSSMParameterforNetworkAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of NetworkHub account will be stored
    Default: /org/sharedservice/infrastructure/NetworkAccountId
  NameforSSMParameterforSharedServicesAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of SharedServices account will be stored
    Default: /org/sharedservice/infrastructure/SharedServicesAccountId
  NameforSSMParameterforSecurityServicesAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Security Services account will be stored
    Default: /org/sharedservice/security/SecurityServicesAccountId
  NameforSSMParameterforNetworkToolsAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Network Tools account will be stored
    Default: /org/sharedservice/infrastructure/NetworkToolsAccountId
  NameforSSMParameterforSecurityROAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Security Read Only account will be stored
    Default: /org/sharedservice/security/SecurityROAccountId
  NameforSSMParameterforSecurityBreakGlassAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Security Break Glass Account will be stored
    Default: /org/sharedservice/security/SecurityBreakGlassAccountId
  NameforSSMParameterforSecurityToolsAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Security Tools account will be stored
    Default: /org/sharedservice/security/SecurityToolsAccountId
  NameforSSMParameterforSandbox1AccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Sandbox-1 account will be stored
    Default: /org/sharedservice/sandbox/Sandbox1AccountId
  NameforSSMParameterforWorkspacesAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Workspaces account will be stored
    Default: /org/sharedservice/workspaces/WorkspacesAccountId
  NameforSSMParameterforDevelopmentOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Development OU will be stored
    Default: /org/core/DevelopmentOU
  NameforSSMParameterforQAOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of QA OU will be stored
    Default: /org/core/QAOU
  NameforSSMParameterforStagingOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Staging OU will be stored
    Default: /org/core/StagingOU
  NameforSSMParameterforProductionOrganizationUnitId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Production OU will be stored
    Default: /org/core/ProductionOU
  NameforSSMParameterforDevelopmentAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Workspaces account will be stored
    Default: /org/core/development/DevelopmentAccountId
  NameforSSMParameterforQAAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Workspaces account will be stored
    Default: /org/core/qa/QAAccountId
  NameforSSMParameterforStagingAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Workspaces account will be stored
    Default: /org/core/staging/StagingAccountId
  NameforSSMParameterforProductionAccountId:
    Type: String
    Description: Name of the SSM Parameter under which the name of Production account will be stored
    Default: /org/core/production/ProductionAccountId

  NameforSSMParameterforListofAccounts:
    Type: String
    Description: Name of the SSM Parameter under which the list of all AWS accounts in the LZ will be stored
    Default: /org/accounts

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Key Account IDs"
        Parameters:
         - ManagementAccountId
         - AuditAccountId
         - LogsArchiveAccountId
         - NetworkAccountId
         - NetworkToolsAccountId
         - SharedServicesAccountId
         - SecurityServicesAccountId
         - SecurityROAccountId
         - SecurityBreakGlassAccountId
         - SecurityToolsAccountId
         - Sandbox1AccountId
         - WorkspacesAccountId
         - DevelopmentAccountId
         - QAAccountId
         - StagingAccountId
         - ProductionAccountId
      -
        Label:
          default: "Organization and Organization Units"
        Parameters:
         - OrganizationId
         - InfrastructureOrganizationUnitId
         - DevelopmentOrganizationUnitId
         - QAOrganizationUnitId
         - StagingOrganizationUnitId
         - ProductionOrganizationUnitId
         - SandboxOrganizationUnitId
         - WorkspacesOrganizationUnitId
         - SecurityOrganizationUnitId
      -
        Label:
          default: "SSM Parameter Keys"
        Parameters:
         - NameforSSMParameterforOrganizationId
         - NameforSSMParameterforLogsArchiveAccoundId
         - NameforSSMParameterforAuditAccountId
         - NameforSSMParameterforInfrastructureOrganizationUnitId
         - NameforSSMParameterforSandboxOrganizationUnitId
         - NameforSSMParameterforSecurityOrganizationUnitId
         - NameforSSMParameterforWorkspacesOrganizationUnitId
         - NameforSSMParameterforManagementAccountId
         - NameforSSMParameterforNetworkAccountId
         - NameforSSMParameterforSharedServicesAccountId
         - NameforSSMParameterforSecurityServicesAccountId
         - NameforSSMParameterforNetworkToolsAccountId
         - NameforSSMParameterforSecurityROAccountId
         - NameforSSMParameterforSecurityBreakGlassAccountId
         - NameforSSMParameterforSecurityToolsAccountId
         - NameforSSMParameterforSandbox1AccountId
         - NameforSSMParameterforWorkspacesAccountId
         - NameforSSMParameterforDevelopmentOrganizationUnitId
         - NameforSSMParameterforQAOrganizationUnitId
         - NameforSSMParameterforStagingOrganizationUnitId
         - NameforSSMParameterforProductionOrganizationUnitId
         - NameforSSMParameterforDevelopmentAccountId
         - NameforSSMParameterforQAAccountId
         - NameforSSMParameterforStagingAccountId
         - NameforSSMParameterforProductionAccountId
         - NameforSSMParameterforListofAccounts



Resources:

  OrganizationIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforOrganizationId
      Type: String
      Value: !Ref OrganizationId
  LogsArchiveAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforLogsArchiveAccoundId
      Type: String
      Value: !Ref LogsArchiveAccountId
  AuditAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforAuditAccountId
      Type: String
      Value: !Ref AuditAccountId
  InfrastructureOrganizationUnitIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforInfrastructureOrganizationUnitId
      Type: String
      Value: !Ref InfrastructureOrganizationUnitId
  SandboxOrganizationUnitIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforSandboxOrganizationUnitId
      Type: String
      Value: !Ref SandboxOrganizationUnitId
  WorkspacesOrganizationUnitIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforWorkspacesOrganizationUnitId
      Type: String
      Value: !Ref WorkspacesOrganizationUnitId
  SecurityOrganizationUnitIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforSecurityOrganizationUnitId
      Type: String
      Value: !Ref SecurityOrganizationUnitId
  ManagementAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforManagementAccountId
      Type: String
      Value: !Ref ManagementAccountId
  NetworkHubAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforNetworkAccountId
      Type: String
      Value: !Ref NetworkAccountId
  SharedServicesAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSharedServicesAccountId
      Type: String
      Value: !Ref SharedServicesAccountId
  SecurityServicesAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSecurityServicesAccountId
      Type: String
      Value: !Ref SecurityServicesAccountId
  SecurityROAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforNetworkToolsAccountId
      Type: String
      Value: !Ref NetworkToolsAccountId  
  SecurityROAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSecurityROAccountId
      Type: String
      Value: !Ref SecurityROAccountId 
  SecurityBreakGlassAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSecurityBreakGlassAccountId
      Type: String
      Value: !Ref SecurityBreakGlassAccountId 
  SecurityToolsAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSecurityToolsAccountId
      Type: String
      Value: !Ref SecurityToolsAccountId 
  Sandbox1AccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforSandbox1AccountId
      Type: String
      Value: !Ref Sandbox1AccountId
  WorkspacesAccountIdSSMParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Ref NameforSSMParameterforWorkspacesAccountId
      Type: String
      Value: !Ref WorkspacesAccountId
  DevelopmentOrganizationUnitIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforDevelopmentOrganizationUnitId
      Type: String
      Value: !Ref DevelopmentOrganizationUnitId
  QAOrganizationUnitIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforQAOrganizationUnitId
      Type: String
      Value: !Ref QAOrganizationUnitId
  StagingOrganizationUnitIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforStagingOrganizationUnitId
      Type: String
      Value: !Ref StagingOrganizationUnitId
  ProductionOrganizationUnitIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforProductionOrganizationUnitId
      Type: String
      Value: !Ref ProductionOrganizationUnitId
  DevelopmentAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforDevelopmentAccountId
      Type: String
      Value: !Ref DevelopmentAccountId
  QAAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforQAAccountId
      Type: String
      Value: !Ref QAAccountId
  StagingAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforStagingAccountId
      Type: String
      Value: !Ref StagingAccountId
  ProductionAccountIDSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Ref NameforSSMParameterforProductionAccountId
      Type: String
      Value: !Ref ProductionAccountId


  EnableRAMLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: EnableRAMSharing
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - organizations:EnableAWSServiceAccess
            - iam:CreateServiceLinkedRole
            - organizations:DescribeOrganization
            - ram:EnableSharingWithAwsOrganization
            - organizations:RegisterDelegatedAdministrator
            Resource: "*"

  EnableRAMLambdaFunction: # needs no monitoring because it is used as a custom resource
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile:
          !Sub |
          # Import statements
          import boto3, sys
          import json
          import cfnresponse
          import os
          from botocore.exceptions import ClientError
          import urllib.request
          # Start Lambda function
          def enable_ram(event, context):
            print("Enabling Resource Access Manager to Interact with Organization")
            try:
              client = boto3.client('ram')
              response = client.enable_sharing_with_aws_organization()
              print("SUCCESS")
              responseStatus = 'SUCCESS'
              responseData = {}
              sendResponse(event, context, responseStatus, responseData)

            except ClientError as ex:
              print('Something went wrong - see below')
              print(ex.response['Error']['Message'])
              print("Respond: FAILED")
              responseStatus = 'FAILED'
              responseData = {}
              sendResponse(event, context, responseStatus, responseData)
              
          def sendResponse(event, context, responseStatus, responseData):
            data = json.dumps({
              'Status': responseStatus,
              'PhysicalResourceId': context.log_stream_name,
              'StackId': event['StackId'],
              'RequestId': event['RequestId'],
              'LogicalResourceId': event['LogicalResourceId'],
              'Data': responseData
            })
            print(data)
            opener = urllib.request.build_opener(urllib.request.HTTPHandler)
            request = urllib.request.Request(url=event['ResponseURL'], data=data.encode('utf-8'))
            request.add_header('Content-Type', '')
            request.get_method = lambda: 'PUT'
            url = opener.open(request)
            print('HTTP Request Sent')
            return

          def lambda_handler(event, context):
            client = event['ResourceProperties']
            print('event=', event)
            print('client=', client)
            if event['RequestType'] in ["Create","Update"]:
              print(f"{event['RequestType']}")
              enable_ram(event, context)
              # Handle a CloudFormation resource delete event
            if event['RequestType'] == "Delete":
              print("Received Delete request: Nothing to Delete")
              responseStatus = 'SUCCESS'
              responseData = {}
              sendResponse(event, context, responseStatus, responseData)
      Handler: "index.lambda_handler"
      MemorySize: 128
      Role: !GetAtt "EnableRAMLambdaFunctionRole.Arn"
      Runtime: "python3.6"
      Timeout: 60

  RAMEnabler:
    Type: Custom::RAMEnabler
    DependsOn:
      - EnableRAMLambdaFunction
    Properties:
      ServiceToken: !GetAtt EnableRAMLambdaFunction.Arn

  AccountListLambdaFunctionRole: # Creates the Lambda role that will get the list of AWS accounts in Organization
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: AWSAccountList
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - organizations:ListAccounts
            Resource: "*"
          - Effect: Allow
            Action:
            - ssm:PutParameter
            Resource: !Join [ '', [ 'arn:aws:ssm:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':parameter', !Ref 'NameforSSMParameterforListofAccounts']]

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventsRuleforAccountList.Arn
      FunctionName: !GetAtt AccountListLambdaFunction.Arn

  AccountListLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt AccountListLambdaFunctionRole.Arn
      Description: Populating the list of AWS Accounts in Organization
      Handler: index.lambda_handler
      Timeout: 120
      Environment:
        Variables:
          ParameterName: !Ref NameforSSMParameterforListofAccounts
      Runtime: python3.6
      Tags:
      - Key: Name
        Value: 'Account List Generator'
      Code:
        ZipFile:
          !Sub |
          import boto3
          import os

          def lambda_handler(event, context):
            account_ids = []
            client = boto3.client('organizations')
            response = client.list_accounts()
            print(f" Response is:{response}")
            while True:
              if 'NextToken' in response:
                for i in range(len(response['Accounts'])):
                  print(f"Adding next Account number")
                  account_ids.append((response['Accounts'][i]['Id']))
                  print(account_ids)
                response = client.list_accounts(NextToken=response['NextToken'])
                print(response)
              else:
                for i in range(len(response['Accounts'])):
                  print(f"Adding Account number {i}")
                  account_ids.append((response['Accounts'][i]['Id']))
                  print(account_ids)
              break
            print(f"Final list of accounts {account_ids}")
            updating_parameter(account_ids)

          def updating_parameter(list):
            print(f"received the following list {list}")
            joined_list = ",".join(list)
            print(f"comma seperated list: {joined_list}")
            print("Adding list to Parameter Store")
            client = boto3.client('ssm')
            response = client.put_parameter(
              Name=os.environ['ParameterName'],
              Value=joined_list,
              Type='StringList',
              Overwrite=True
              )
            print("Updated list of accounts in System Center Parameter Store")
            return

  EventsRuleforAccountList:
    Type: AWS::Events::Rule
    Properties: 
      Description: Cloudwatch Event Rule to update the list of Accounts
      EventPattern:
        {
          "source": [
            "aws.controltower"
          ],
          "detail-type": [
            "AWS Service Event via CloudTrail"
          ],
          "detail": {
            "eventName": [
              "CreateManagedAccount"
            ]
          }
        }
      Name: UpdateAccountList
      State: ENABLED
      Targets: 
      - Id: !Ref AccountListLambdaFunction
        Arn: !GetAtt AccountListLambdaFunction.Arn
  AWSControlTowerExecutionforManagement:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSControlTowerExecution
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: 
            - !Join [ "", ["arn:aws:iam::", !Ref ManagementAccountId, ":root"]]
          Action:
          - sts:AssumeRole
      Path: "/"